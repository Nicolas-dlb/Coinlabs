// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Graph should render correctly 1`] = `
<div
  className="graph_container"
>
  <div
    className="graph"
  >
    <ResponsiveContainer
      debounce={0}
      height={10}
      width={10}
    >
      <AreaChart
        barCategoryGap="10%"
        barGap={4}
        data={
          Array [
            Object {
              "Price": 0,
              "timestamp": 0,
              "tokens": 0,
            },
          ]
        }
        layout="horizontal"
        margin={
          Object {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        reverseStackOrder={false}
        stackOffset="none"
        syncMethod="index"
      >
        <defs>
          <linearGradient
            id="Green"
            x1="1"
            x2="0"
            y1="0"
            y2="1"
          >
            <stop
              offset="0%"
              stopColor="#2aac63"
              stopOpacity={0.17}
            />
            <stop
              offset="100%"
              stopColor="#2aac63"
              stopOpacity={0}
            />
          </linearGradient>
          <linearGradient
            id="White"
            x1="0"
            x2="0"
            y1="0"
            y2="1"
          >
            <stop
              offset="0%"
              stopColor="#fff"
              stopOpacity={0}
            />
            <stop
              offset="100%"
              stopColor="#fff"
              stopOpacity={0}
            />
          </linearGradient>
          <linearGradient
            id="Blue"
            x1="1"
            x2="0"
            y1="0"
            y2="1"
          >
            <stop
              offset="0%"
              stopColor="#4689b6"
              stopOpacity={0.17}
            />
            <stop
              offset="100%"
              stopColor="#4689b6"
              stopOpacity={0}
            />
          </linearGradient>
          <linearGradient
            id="Pink"
            x1="1"
            x2="0"
            y1="0"
            y2="1"
          >
            <stop
              offset="0%"
              stopColor="#a075b9"
              stopOpacity={0.17}
            />
            <stop
              offset="100%"
              stopColor="#a075b9"
              stopOpacity={0}
            />
          </linearGradient>
          <linearGradient
            id="Orange"
            x1="1"
            x2="0"
            y1="0"
            y2="1"
          >
            <stop
              offset="0%"
              stopColor="#db9a67"
              stopOpacity={0.17}
            />
            <stop
              offset="100%"
              stopColor="#db9a67"
              stopOpacity={0}
            />
          </linearGradient>
          <linearGradient
            id="Blue2"
            x1="1"
            x2="0"
            y1="0"
            y2="1"
          >
            <stop
              offset="0%"
              stopColor="#4a9cc0"
              stopOpacity={0.17}
            />
            <stop
              offset="100%"
              stopColor="#4a9cc0"
              stopOpacity={0}
            />
          </linearGradient>
        </defs>
        <XAxis
          allowDataOverflow={false}
          allowDecimals={true}
          allowDuplicatedCategory={true}
          axisLine={false}
          dataKey="tokens"
          domain={
            Array [
              0,
              "auto",
            ]
          }
          height={30}
          hide={true}
          interval="preserveStartEnd"
          mirror={false}
          orientation="bottom"
          padding={
            Object {
              "left": 0,
              "right": 0,
            }
          }
          reversed={false}
          scale="auto"
          tickCount={5}
          tickLine={true}
          tickMargin={25}
          type="number"
          width={0}
          xAxisId={0}
        />
        <YAxis
          allowDataOverflow={false}
          allowDecimals={true}
          allowDuplicatedCategory={true}
          axisLine={false}
          domain={
            Array [
              0,
              "auto",
            ]
          }
          height={0}
          hide={true}
          mirror={false}
          orientation="left"
          padding={
            Object {
              "bottom": 0,
              "top": 0,
            }
          }
          reversed={false}
          scale="auto"
          tickCount={5}
          tickLine={true}
          tickMargin={25}
          type="number"
          width={60}
          yAxisId={0}
        />
        <Area
          activeDot={
            Object {
              "fill": "#26ae5f",
              "r": 5,
              "stroke": "#fff",
              "strokeWidth": 3,
            }
          }
          animationBegin={0}
          animationDuration={1500}
          animationEasing="ease"
          connectNulls={false}
          dataKey="Price"
          dot={false}
          fill="url(#White)"
          fillOpacity={1}
          hide={false}
          isAnimationActive={true}
          legendType="line"
          onMouseOver={[Function]}
          points={Array []}
          stroke="#fff"
          strokeWidth={1}
          type="monotone"
          xAxisId={0}
          yAxisId={0}
        />
        <Area
          activeDot={
            Object {
              "fill": "#4689b6",
              "r": 0,
              "stroke": "#fff",
              "strokeWidth": 0,
            }
          }
          animationBegin={0}
          animationDuration={1500}
          animationEasing="ease"
          connectNulls={false}
          dataKey="ethereum"
          dot={false}
          fill="none"
          fillOpacity={1}
          hide={false}
          isAnimationActive={true}
          legendType="line"
          onMouseOver={[Function]}
          points={Array []}
          stroke="#4689b6"
          strokeWidth={0}
          type="monotone"
          xAxisId={0}
          yAxisId={0}
        />
        <Area
          activeDot={
            Object {
              "fill": "#db9a67",
              "r": 0,
              "stroke": "#fff",
              "strokeWidth": 0,
            }
          }
          animationBegin={0}
          animationDuration={1500}
          animationEasing="ease"
          connectNulls={false}
          dataKey="litecoin"
          dot={false}
          fill="none"
          fillOpacity={1}
          hide={false}
          isAnimationActive={true}
          legendType="line"
          onMouseOver={[Function]}
          points={Array []}
          stroke="#db9a67"
          strokeWidth={0}
          type="monotone"
          xAxisId={0}
          yAxisId={0}
        />
        <Area
          activeDot={
            Object {
              "fill": "#4a9cc0",
              "r": 0,
              "stroke": "#fff",
              "strokeWidth": 0,
            }
          }
          animationBegin={0}
          animationDuration={1500}
          animationEasing="ease"
          connectNulls={false}
          dataKey="neo"
          dot={false}
          fill="none"
          fillOpacity={1}
          hide={false}
          isAnimationActive={true}
          legendType="line"
          onMouseOver={[Function]}
          points={Array []}
          stroke="#4a9cc0"
          strokeWidth={0}
          type="monotone"
          xAxisId={0}
          yAxisId={0}
        />
        <Area
          activeDot={
            Object {
              "fill": "#a075b9",
              "r": 0,
              "stroke": "#fff",
              "strokeWidth": 0,
            }
          }
          animationBegin={0}
          animationDuration={1500}
          animationEasing="ease"
          connectNulls={false}
          dataKey="ripple"
          dot={false}
          fill="none"
          fillOpacity={1}
          hide={false}
          isAnimationActive={true}
          legendType="line"
          onMouseOver={[Function]}
          points={Array []}
          stroke="#a075b9"
          strokeWidth={0}
          type="monotone"
          xAxisId={0}
          yAxisId={0}
        />
      </AreaChart>
    </ResponsiveContainer>
    <Grid />
  </div>
</div>
`;
